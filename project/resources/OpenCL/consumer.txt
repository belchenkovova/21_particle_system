kernel void			consumer_execute(
					global vector *position,
					global vector *velocity,
					global vector *acceleration,
					global char *is_alive)
{
	const int		global_id = get_global_id(0);

	//				If already dead -> stop
	if (is_alive[global_id] == 0)
		return ;

	//				If not inside consumer zone -> stop
#define MIN			((vector){-10, -10, -10})
#define MAX			((vector){+10, +10, +10})

	const vector	min = MIN;
	const vector	max = MAX;

	if (position[global_id].x < min.x || position[global_id].x > max.x)
		return ;
	if (position[global_id].y < min.y || position[global_id].y > max.y)
		return ;
	if (position[global_id].z < min.z || position[global_id].z > max.z)
		return ;

	//				Set dead
	is_alive[global_id] = 0;
	reset_target(position, velocity, acceleration, global_id);
}
