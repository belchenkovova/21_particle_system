kernel void			repeller_execute(
					constant int *number_of_objects,
					constant object_type *object_type,
                    constant vector3 *object_position,
                    constant float *object_power,
					global vector3 *position,
					global vector3 *velocity,
					global vector3 *acceleration)
{
	const int		global_id = get_global_id(0);

	vector3			direction;
	vector3			force;
	float			distance;
	float			strength;

	for (int object_i = 0; object_i < *number_of_objects; object_i++)
    {
    	if (object_type[object_i] != object_type_repeller)
    		continue ;

		direction = vector3_subtract(object_position[object_i], position[global_id]);
		distance = vector3_length(direction);

		distance = CLAMP(distance, REPELLER_LOWER, REPELLER_HIGHER);
		strength = -1 * REPELLER_POWER * object_power[object_i] / SQUARE(distance);

		force = vector3_normalize(direction);
		force = vector3_multiply(force, strength);

		acceleration[global_id] = vector3_add(acceleration[global_id], force);
	}
}